/*
 * Generated by gdbus-codegen 2.34.1. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __E_DBUS_AUTHENTICATOR_H__
#define __E_DBUS_AUTHENTICATOR_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.gnome.evolution.dataserver.Authenticator */

#define E_DBUS_TYPE_AUTHENTICATOR (e_dbus_authenticator_get_type ())
#define E_DBUS_AUTHENTICATOR(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), E_DBUS_TYPE_AUTHENTICATOR, EDBusAuthenticator))
#define E_DBUS_IS_AUTHENTICATOR(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), E_DBUS_TYPE_AUTHENTICATOR))
#define E_DBUS_AUTHENTICATOR_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), E_DBUS_TYPE_AUTHENTICATOR, EDBusAuthenticatorIface))

struct _EDBusAuthenticator;
typedef struct _EDBusAuthenticator EDBusAuthenticator;
typedef struct _EDBusAuthenticatorIface EDBusAuthenticatorIface;

struct _EDBusAuthenticatorIface
{
  GTypeInterface parent_iface;


  gboolean (*handle_accepted) (
    EDBusAuthenticator *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_cancel) (
    EDBusAuthenticator *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_ready) (
    EDBusAuthenticator *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_encryption_key);

  gboolean (*handle_rejected) (
    EDBusAuthenticator *object,
    GDBusMethodInvocation *invocation);

  void (*authenticate) (
    EDBusAuthenticator *object,
    const gchar *arg_encrypted_secret);

  void (*dismissed) (
    EDBusAuthenticator *object);

};

GType e_dbus_authenticator_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *e_dbus_authenticator_interface_info (void);
guint e_dbus_authenticator_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void e_dbus_authenticator_complete_ready (
    EDBusAuthenticator *object,
    GDBusMethodInvocation *invocation);

void e_dbus_authenticator_complete_cancel (
    EDBusAuthenticator *object,
    GDBusMethodInvocation *invocation);

void e_dbus_authenticator_complete_accepted (
    EDBusAuthenticator *object,
    GDBusMethodInvocation *invocation);

void e_dbus_authenticator_complete_rejected (
    EDBusAuthenticator *object,
    GDBusMethodInvocation *invocation);



/* D-Bus signal emissions functions: */
void e_dbus_authenticator_emit_authenticate (
    EDBusAuthenticator *object,
    const gchar *arg_encrypted_secret);

void e_dbus_authenticator_emit_dismissed (
    EDBusAuthenticator *object);



/* D-Bus method calls: */
void e_dbus_authenticator_call_ready (
    EDBusAuthenticator *proxy,
    const gchar *arg_encryption_key,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean e_dbus_authenticator_call_ready_finish (
    EDBusAuthenticator *proxy,
    GAsyncResult *res,
    GError **error);

gboolean e_dbus_authenticator_call_ready_sync (
    EDBusAuthenticator *proxy,
    const gchar *arg_encryption_key,
    GCancellable *cancellable,
    GError **error);

void e_dbus_authenticator_call_cancel (
    EDBusAuthenticator *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean e_dbus_authenticator_call_cancel_finish (
    EDBusAuthenticator *proxy,
    GAsyncResult *res,
    GError **error);

gboolean e_dbus_authenticator_call_cancel_sync (
    EDBusAuthenticator *proxy,
    GCancellable *cancellable,
    GError **error);

void e_dbus_authenticator_call_accepted (
    EDBusAuthenticator *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean e_dbus_authenticator_call_accepted_finish (
    EDBusAuthenticator *proxy,
    GAsyncResult *res,
    GError **error);

gboolean e_dbus_authenticator_call_accepted_sync (
    EDBusAuthenticator *proxy,
    GCancellable *cancellable,
    GError **error);

void e_dbus_authenticator_call_rejected (
    EDBusAuthenticator *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean e_dbus_authenticator_call_rejected_finish (
    EDBusAuthenticator *proxy,
    GAsyncResult *res,
    GError **error);

gboolean e_dbus_authenticator_call_rejected_sync (
    EDBusAuthenticator *proxy,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define E_DBUS_TYPE_AUTHENTICATOR_PROXY (e_dbus_authenticator_proxy_get_type ())
#define E_DBUS_AUTHENTICATOR_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), E_DBUS_TYPE_AUTHENTICATOR_PROXY, EDBusAuthenticatorProxy))
#define E_DBUS_AUTHENTICATOR_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), E_DBUS_TYPE_AUTHENTICATOR_PROXY, EDBusAuthenticatorProxyClass))
#define E_DBUS_AUTHENTICATOR_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), E_DBUS_TYPE_AUTHENTICATOR_PROXY, EDBusAuthenticatorProxyClass))
#define E_DBUS_IS_AUTHENTICATOR_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), E_DBUS_TYPE_AUTHENTICATOR_PROXY))
#define E_DBUS_IS_AUTHENTICATOR_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), E_DBUS_TYPE_AUTHENTICATOR_PROXY))

typedef struct _EDBusAuthenticatorProxy EDBusAuthenticatorProxy;
typedef struct _EDBusAuthenticatorProxyClass EDBusAuthenticatorProxyClass;
typedef struct _EDBusAuthenticatorProxyPrivate EDBusAuthenticatorProxyPrivate;

struct _EDBusAuthenticatorProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  EDBusAuthenticatorProxyPrivate *priv;
};

struct _EDBusAuthenticatorProxyClass
{
  GDBusProxyClass parent_class;
};

GType e_dbus_authenticator_proxy_get_type (void) G_GNUC_CONST;

void e_dbus_authenticator_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
EDBusAuthenticator *e_dbus_authenticator_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
EDBusAuthenticator *e_dbus_authenticator_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void e_dbus_authenticator_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
EDBusAuthenticator *e_dbus_authenticator_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
EDBusAuthenticator *e_dbus_authenticator_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define E_DBUS_TYPE_AUTHENTICATOR_SKELETON (e_dbus_authenticator_skeleton_get_type ())
#define E_DBUS_AUTHENTICATOR_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), E_DBUS_TYPE_AUTHENTICATOR_SKELETON, EDBusAuthenticatorSkeleton))
#define E_DBUS_AUTHENTICATOR_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), E_DBUS_TYPE_AUTHENTICATOR_SKELETON, EDBusAuthenticatorSkeletonClass))
#define E_DBUS_AUTHENTICATOR_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), E_DBUS_TYPE_AUTHENTICATOR_SKELETON, EDBusAuthenticatorSkeletonClass))
#define E_DBUS_IS_AUTHENTICATOR_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), E_DBUS_TYPE_AUTHENTICATOR_SKELETON))
#define E_DBUS_IS_AUTHENTICATOR_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), E_DBUS_TYPE_AUTHENTICATOR_SKELETON))

typedef struct _EDBusAuthenticatorSkeleton EDBusAuthenticatorSkeleton;
typedef struct _EDBusAuthenticatorSkeletonClass EDBusAuthenticatorSkeletonClass;
typedef struct _EDBusAuthenticatorSkeletonPrivate EDBusAuthenticatorSkeletonPrivate;

struct _EDBusAuthenticatorSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  EDBusAuthenticatorSkeletonPrivate *priv;
};

struct _EDBusAuthenticatorSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType e_dbus_authenticator_skeleton_get_type (void) G_GNUC_CONST;

EDBusAuthenticator *e_dbus_authenticator_skeleton_new (void);


G_END_DECLS

#endif /* __E_DBUS_AUTHENTICATOR_H__ */
