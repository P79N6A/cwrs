This is ../../../../packages/flex/doc/flex.info, produced by makeinfo
version 4.13 from ../../../../packages/flex/doc/flex.texi.

INFO-DIR-SECTION Programming
START-INFO-DIR-ENTRY
* flex: (flex).      Fast lexical analyzer generator (lex replacement).
END-INFO-DIR-ENTRY

   The flex manual is placed under the same licensing conditions as the
rest of flex:

   Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2012 The
Flex Project.

   Copyright (C) 1990, 1997 The Regents of the University of California.
All rights reserved.

   This code is derived from software contributed to Berkeley by Vern
Paxson.

   The United States Government has rights in this work pursuant to
contract no. DE-AC03-76SF00098 between the United States Department of
Energy and the University of California.

   Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:

  1.  Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

  2. Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the
     distribution.

   Neither the name of the University nor the names of its contributors
may be used to endorse or promote products derived from this software
without specific prior written permission.

   THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


Indirect:
flex.info-1: 1687
flex.info-2: 288477

Tag Table:
(Indirect)
Node: Top1687
Node: Copyright7752
Node: Reporting Bugs9271
Node: Introduction9576
Node: Simple Examples10404
Node: Format13691
Node: Definitions Section14104
Ref: Definitions Section-Footnote-116362
Node: Rules Section16430
Node: User Code Section17587
Node: Comments in the Input18025
Node: Patterns19392
Ref: case and character ranges26216
Node: Matching30227
Node: Actions33511
Node: Generated Scanner42480
Node: Start Conditions47495
Node: Multiple Input Buffers58032
Ref: Scanning Strings64568
Node: EOF66198
Node: Misc Macros67784
Node: User Values70636
Node: Yacc72967
Node: Scanner Options73862
Node: Options for Specifying Filenames76618
Ref: option-header76844
Ref: option-outfile77556
Ref: option-stdout77881
Node: Options Affecting Scanner Behavior78863
Ref: option-case-insensitive79104
Ref: option-lex-compat79537
Ref: option-batch80069
Ref: option-interactive80593
Ref: option-7bit81947
Ref: option-8bit83251
Ref: option-default83663
Ref: option-always-interactive83727
Ref: option-posix84331
Ref: option-stack85478
Ref: option-stdinit85586
Ref: option-yylineno86064
Ref: option-yywrap86507
Node: Code-Level And API Options86775
Ref: option-ansi-definitions87002
Ref: option-ansi-prototypes87254
Ref: option-bison-bridge87501
Ref: option-bison-locations87840
Ref: option-noline88100
Ref: option-reentrant88614
Ref: option-c++89225
Ref: option-array89351
Ref: option-pointer89449
Ref: option-prefix89577
Ref: option-main91105
Ref: option-nounistd91289
Ref: option-yyclass91797
Node: Options for Scanner Speed and Size92283
Ref: option-align92832
Ref: option-ecs93333
Ref: option-meta-ecs94369
Ref: option-read94856
Ref: option-full96738
Ref: option-fast96933
Node: Debugging Options97858
Ref: option-backup98045
Ref: option-debug98590
Ref: option-perf-report99312
Ref: option-nodefault99938
Ref: option-trace100256
Ref: option-nowarn100547
Ref: option-verbose100615
Ref: option-warn101044
Node: Miscellaneous Options101263
Node: Performance101720
Node: Cxx111962
Node: Reentrant119564
Node: Reentrant Uses120241
Node: Reentrant Overview121802
Node: Reentrant Example122601
Node: Reentrant Detail123375
Node: Specify Reentrant123808
Node: Extra Reentrant Argument124455
Node: Global Replacement125706
Node: Init and Destroy Functions126934
Node: Accessor Methods129451
Node: Extra Data130793
Node: About yyscan_t133058
Node: Reentrant Functions133453
Ref: bison-functions134935
Node: Lex and Posix135674
Node: Memory Management143045
Ref: memory-management143191
Node: The Default Memory Management143419
Ref: The Default Memory Management-Footnote-1147225
Node: Overriding The Default Memory Management147378
Ref: Overriding The Default Memory Management-Footnote-1149775
Node: A Note About yytext And Memory149939
Node: Serialized Tables151172
Ref: serialization151316
Node: Creating Serialized Tables152081
Node: Loading and Unloading Serialized Tables153689
Node: Tables File Format155457
Node: Diagnostics162471
Node: Limitations165880
Node: Bibliography167828
Node: FAQ168501
Node: When was flex born?172741
Node: How do I expand backslash-escape sequences in C-style quoted strings?173118
Node: Why do flex scanners call fileno if it is not ANSI compatible?174422
Node: Does flex support recursive pattern definitions?175217
Node: How do I skip huge chunks of input (tens of megabytes) while using flex?176063
Node: Flex is not matching my patterns in the same order that I defined them.176530
Node: My actions are executing out of order or sometimes not at all.178275
Node: How can I have multiple input sources feed into the same scanner at the same time?179048
Node: Can I build nested parsers that work with the same input file?181036
Node: How can I match text only at the end of a file?182042
Node: How can I make REJECT cascade across start condition boundaries?182846
Node: Why cant I use fast or full tables with interactive mode?183860
Node: How much faster is -F or -f than -C?185118
Node: If I have a simple grammar cant I just parse it with flex?185430
Node: Why doesn't yyrestart() set the start state back to INITIAL?185911
Node: How can I match C-style comments?186538
Node: The period isn't working the way I expected.187348
Node: Can I get the flex manual in another format?188595
Node: Does there exist a "faster" NDFA->DFA algorithm?189084
Node: How does flex compile the DFA so quickly?189594
Node: How can I use more than 8192 rules?190561
Node: How do I abandon a file in the middle of a scan and switch to a new file?191971
Node: How do I execute code only during initialization (only before the first scan)?192524
Node: How do I execute code at termination?193301
Node: Where else can I find help?193627
Node: Can I include comments in the "rules" section of the file?194000
Node: I get an error about undefined yywrap().194379
Node: How can I change the matching pattern at run time?194855
Node: How can I expand macros in the input?195217
Node: How can I build a two-pass scanner?196249
Node: How do I match any string not matched in the preceding rules?197165
Node: I am trying to port code from AT&T lex that uses yysptr and yysbuf.198074
Node: Is there a way to make flex treat NULL like a regular character?198869
Node: Whenever flex can not match the input it says "flex scanner jammed".199390
Node: Why doesn't flex have non-greedy operators like perl does?200033
Node: Memory leak - 16386 bytes allocated by malloc.201386
Ref: faq-memory-leak201684
Node: How do I track the byte offset for lseek()?202651
Node: How do I use my own I/O classes in a C++ scanner?204160
Node: How do I skip as many chars as possible?205003
Node: deleteme00206077
Node: Are certain equivalent patterns faster than others?206517
Node: Is backing up a big deal?209935
Node: Can I fake multi-byte character support?211841
Node: deleteme01213282
Node: Can you discuss some flex internals?214391
Node: unput() messes up yy_at_bol216635
Node: The | operator is not doing what I want217737
Node: Why can't flex understand this variable trailing context pattern?219283
Node: The ^ operator isn't working220532
Node: Trailing context is getting confused with trailing optional patterns221767
Node: Is flex GNU or not?223010
Node: ERASEME53224683
Node: I need to scan if-then-else blocks and while loops225453
Node: ERASEME55226652
Node: ERASEME56227750
Node: ERASEME57229108
Node: Is there a repository for flex scanners?230106
Node: How can I conditionally compile or preprocess my flex input file?230421
Node: Where can I find grammars for lex and yacc?230894
Node: I get an end-of-buffer message for each character scanned.231241
Node: unnamed-faq-62231836
Node: unnamed-faq-63232854
Node: unnamed-faq-64234151
Node: unnamed-faq-65235117
Node: unnamed-faq-66235903
Node: unnamed-faq-67237018
Node: unnamed-faq-68238005
Node: unnamed-faq-69239147
Node: unnamed-faq-70239860
Node: unnamed-faq-71240621
Node: unnamed-faq-72241830
Node: unnamed-faq-73242873
Node: unnamed-faq-74243797
Node: unnamed-faq-75244742
Node: unnamed-faq-76245874
Node: unnamed-faq-77246580
Node: unnamed-faq-78247473
Node: unnamed-faq-79248471
Node: unnamed-faq-80250171
Node: unnamed-faq-81251489
Node: unnamed-faq-82254289
Node: unnamed-faq-83255246
Node: unnamed-faq-84257026
Node: unnamed-faq-85258129
Node: unnamed-faq-86259136
Node: unnamed-faq-87260074
Node: unnamed-faq-88260720
Node: unnamed-faq-90261551
Node: unnamed-faq-91262814
Node: unnamed-faq-92265242
Node: unnamed-faq-93265741
Node: unnamed-faq-94266668
Node: unnamed-faq-95268080
Node: unnamed-faq-96269598
Node: unnamed-faq-97270357
Node: unnamed-faq-98271024
Node: unnamed-faq-99271689
Node: unnamed-faq-100272618
Node: unnamed-faq-101273328
Node: What is the difference between YYLEX_PARAM and YY_DECL?274141
Node: Why do I get "conflicting types for yylex" error?274662
Node: How do I access the values set in a Flex action from within a Bison action?275192
Node: Appendices275623
Node: Makefiles and Flex275832
Ref: Makefiles and Flex-Footnote-1279028
Ref: Makefiles and Flex-Footnote-2279145
Ref: Makefiles and Flex-Footnote-3279331
Node: Bison Bridge279382
Ref: Bison Bridge-Footnote-1282047
Node: M4 Dependency282239
Ref: M4 Dependency-Footnote-1283644
Node: Common Patterns283779
Node: Numbers284070
Node: Identifiers285047
Node: Quoted Constructs285874
Node: Addresses286926
Node: Indices288239
Node: Concept Index288477
Node: Index of Functions and Macros313760
Node: Index of Variables318656
Node: Index of Data Types320322
Node: Index of Hooks321210
Node: Index of Scanner Options321778

End Tag Table
